(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{290:function(t,s,a){"use strict";a.r(s);var n=a(11),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"yuescript"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#yuescript"}},[t._v("#")]),t._v(" Yuescript")]),t._v(" "),s("img",{attrs:{src:"/image/yuescript.svg",width:"300px",height:"300px",alt:"logo"}}),t._v(" "),s("h2",{attrs:{id:"introduction"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),s("p",[t._v("Yuescript is a dynamic language that compiles to Lua. And it's a "),s("a",{attrs:{href:"https://github.com/leafo/moonscript",target:"_blank",rel:"noopener noreferrer"}},[t._v("Moonscript"),s("OutboundLink")],1),t._v(" dialect. The codes written in Yuescript are expressive and extremely concise. And it is suitable for writing some changing application logic with more maintainable codes and runs in a Lua embeded environment such as games or website servers.")]),t._v(" "),s("p",[t._v("Yue (月) is the name of moon in Chinese and it's pronounced as [jyɛ].")]),t._v(" "),s("h3",{attrs:{id:"an-overview-of-yuescript"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#an-overview-of-yuescript"}},[t._v("#")]),t._v(" An Overview of Yuescript")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- import syntax")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yue"')]),t._v(" as "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("to_lua")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- implicit objects")]),t._v("\ninventory "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("equipment")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sword"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"shield"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("items")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"potion"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bread"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- pipe operator")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  |"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" map "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n  |"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" filter "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n  |"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" reduce "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b\n  |"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- metatable manipulation")]),t._v("\napple "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("size")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x00ffff")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\np apple"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("color"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" apple"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" apple"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("?\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- js-like export syntax")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" yuescript "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"月之脚本"')]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('-- import syntax\nimport "yue" as :p, :to_lua\n\n-- implicit objects\ninventory =\n  equipment:\n    * "sword"\n    * "shield"\n  items:\n    * name: "potion"\n      count: 10\n    * name: "bread"\n      count: 3\n\n-- pipe operator\n{1, 2, 3}\n  |> map (x)-> x * 2\n  |> filter (x)-> x > 4\n  |> reduce 0, (a, b)-> a + b\n  |> print\n\n-- metatable manipulation\napple =\n  size: 15\n  <index>: {color: 0x00ffff}\np apple.color, apple.<index> if apple.<>?\n\n-- js-like export syntax\nexport yuescript = "月之脚本"\n')])]),t._v(" "),s("h2",{attrs:{id:"installation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[t._v("#")]),t._v(" Installation")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Lua Module")])])]),t._v(" "),s("p",[t._v(" Install "),s("a",{attrs:{href:"https://luarocks.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("luarocks"),s("OutboundLink")],1),t._v(", a package manager for Lua modules. Then install it as a Lua module and executable with:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("> luarocks install yuescript\n")])])]),s("p",[t._v(" Or you can build "),s("code",[t._v("yue.so")]),t._v(" file with:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("> make shared LUAI=/usr/local/include/lua LUAL=/usr/local/lib/lua\n")])])]),s("p",[t._v(" Then get the binary file from path "),s("strong",[t._v("bin/shared/yue.so")]),t._v(".")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Binary Tool")])])]),t._v(" "),s("p",[t._v(" Clone this repo, then build and install executable with:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("> make install\n")])])]),s("p",[t._v(" Build Yuescript tool without macro feature:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("> make install NO_MACRO=true\n")])])]),s("p",[t._v(" Build Yuescript tool without built-in Lua binary:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("> make install NO_LUA=true\n")])])]),s("h2",{attrs:{id:"usage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[t._v("#")]),t._v(" Usage")]),t._v(" "),s("h3",{attrs:{id:"lua-module"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lua-module"}},[t._v("#")]),t._v(" Lua Module")]),t._v(" "),s("p",[t._v(" Use Yuescript module in Lua:")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Case 1")]),s("br"),t._v('\nRequire "your_yuescript_entry.yue" in Lua.')])]),t._v(" "),s("div",{staticClass:"language-Lua extra-class"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yue"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"your_yuescript_entry"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v(' And this code still works when you compile "your_yuescript_entry.yue"  to "your_yuescript_entry.lua" in the same path. In the rest Yuescript files just use the normal '),s("strong",[t._v("require")]),t._v(" or "),s("strong",[t._v("import")]),t._v(". The code line numbers in error messages will also be handled correctly.")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Case 2")]),s("br"),t._v("\nRequire Yuescript module and rewite message by hand.")])]),t._v(" "),s("div",{staticClass:"language-lua extra-class"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("local")]),t._v(" yue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yue"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("local")]),t._v(" success"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("xpcall")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  yue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yuescript_module_name"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" yue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("traceback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ul",[s("li",[s("strong",[t._v("Case 3")]),s("br"),t._v("\nUse the Yuescript compiler function in Lua.")])]),t._v(" "),s("div",{staticClass:"language-lua extra-class"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("local")]),t._v(" yue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yue"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("local")]),t._v(" codes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" globals "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" yue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("to_lua")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('[[\nf = ->\n  print "hello world"\nf!\n]]')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  implicit_return_root "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  reserve_line_number "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  lint_global "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"yuescript-tool"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#yuescript-tool"}},[t._v("#")]),t._v(" Yuescript Tool")]),t._v(" "),s("p",[t._v(" Use Yuescript tool with:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("> yue -h\nUsage: yue [options|files|directories] ...\n\n   -h       Print this message\n   -e str   Execute a file or raw codes\n   -t path  Specify where to place compiled files\n   -o file  Write output to file\n   -s       Use spaces in generated codes instead of tabs\n   -m       Generate minified codes\n   -p       Write output to standard out\n   -b       Dump compile time (doesn't write output)\n   -l       Write line numbers from source codes\n   -v       Print version\n   --       Read from standard in, print to standard out\n            (Must be first and only argument)\n\n   Execute without options to enter REPL, type symbol '$'\n   in a single line to start/stop multi-line mode\n")])])]),s("p",[t._v("  Use cases:"),s("br"),t._v("\n  Recursively compile every Yuescript file with extension "),s("strong",[t._v(".yue")]),t._v(" under current path:  "),s("strong",[t._v("yue .")]),s("br"),t._v("\n  Compile and save results to a target path:  "),s("strong",[t._v("yue -t /target/path/ .")]),s("br"),t._v("\n  Compile and reserve debug info:  "),s("strong",[t._v("yue -l .")]),s("br"),t._v("\n  Compile and generate minified codes:  "),s("strong",[t._v("yue -m .")]),s("br"),t._v("\n  Execute raw codes:  "),s("strong",[t._v("yue -e 'print 123'")]),s("br"),t._v("\n  Execute a Yuescript file:  "),s("strong",[t._v("yue -e main.yue")])]),t._v(" "),s("h2",{attrs:{id:"macro"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#macro"}},[t._v("#")]),t._v(" Macro")]),t._v(" "),s("h3",{attrs:{id:"common-usage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#common-usage"}},[t._v("#")]),t._v(" Common Usage")]),t._v(" "),s("p",[t._v("Macro function is used for evaluating a string in the compile time and insert the generated codes into final compilation.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("macro "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PI2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pi")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\narea "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PI2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n\nmacro "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HELLO")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"'hello world'\"")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HELLO")]),t._v("\n\nmacro config "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("debugging"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("\n  global debugMode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" debugging "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"true"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\n\nmacro asserts "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cond"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("\n  debugMode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"assert '),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("#{")]),s("span",{pre:!0,attrs:{class:"token moonscript"}},[t._v("cond")]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("or")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\n\nmacro "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("assert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cond"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("\n  debugMode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"assert '),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("#{")]),s("span",{pre:!0,attrs:{class:"token moonscript"}},[t._v("cond")]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("or")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("#{")]),s("span",{pre:!0,attrs:{class:"token moonscript"}},[t._v("cond")]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),t._v('"')]),t._v("\n\n$config "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n$asserts item "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("nil")]),t._v("\n\n$config "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\nvalue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("assert")]),t._v(" item\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- the passed expressions are treated as strings")]),t._v("\nmacro "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"#{ table.concat {...}, ' and ' }\"")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" f1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" f2"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" f3"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OK"')]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('macro PI2 = -> math.pi * 2\narea = $PI2 * 5\n\nmacro HELLO = -> "\'hello world\'"\nprint $HELLO\n\nmacro config = (debugging)->\n  global debugMode = debugging == "true"\n  ""\n\nmacro asserts = (cond)->\n  debugMode and "assert #{cond}" or ""\n\nmacro assert = (cond)->\n  debugMode and "assert #{cond}" or "#{cond}"\n\n$config true\n$asserts item ~= nil\n\n$config false\nvalue = $assert item\n\n-- the passed expressions are treated as strings\nmacro and = (...)-> "#{ table.concat {...}, \' and \' }"\nif $and f1!, f2!, f3!\n  print "OK"\n')])]),t._v(" "),s("h3",{attrs:{id:"insert-raw-codes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#insert-raw-codes"}},[t._v("#")]),t._v(" Insert Raw Codes")]),t._v(" "),s("p",[t._v("A macro function can either return a Yuescript string or a config table containing Lua codes.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("macro yueFunc "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("var"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"local '),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("#{")]),s("span",{pre:!0,attrs:{class:"token moonscript"}},[t._v("var")]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),t._v(' = ->"')]),t._v("\n$yueFunc funcA\nfuncA "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"assign the Yue defined variable"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- take care and let Yuescript know the")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- local variables you declared in Lua code")]),t._v("\nmacro luaFunc "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("var"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("code")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"local function '),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("#{")]),s("span",{pre:!0,attrs:{class:"token moonscript"}},[t._v("var")]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),t._v('() end"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lua"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("locals")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("var"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n$luaFunc funcB\nfuncB "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"assign the Lua defined variable"')]),t._v("\n\nmacro lua "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("code"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("code")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lua"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- the raw string leading and ending symbols are auto trimed")]),t._v("\n$lua"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('[==[\n-- raw Lua codes insertion\nif cond then\n  print("output")\nend\n]==]')]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('macro yueFunc = (var)-> "local #{var} = ->"\n$yueFunc funcA\nfuncA = -> "assign the Yue defined variable"\n\n-- take care and let Yuescript know the\n-- local variables you declared in Lua codes\nmacro luaFunc = (var)-> {\n  code: "local function #{var}() end"\n  type: "lua"\n  locals: {var}\n}\n$luaFunc funcB\nfuncB = -> "assign the Lua defined variable"\n\nmacro lua = (code)-> {\n  :code\n  type: "lua"\n}\n\n-- the raw string leading and ending symbols are auto trimed\n$lua[==[\n-- raw Lua codes insertion\nif cond then\n  print("output")\nend\n]==]\n')])]),t._v(" "),s("h3",{attrs:{id:"export-macro"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#export-macro"}},[t._v("#")]),t._v(" Export Macro")]),t._v(" "),s("p",[t._v("Macro functions can be exported from a module and get imported in another module. You have to put export macro functions in a single file to be used, and only macro definition, macro importing and macro expansion in place can be put into the macro exporting module.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- file: utils.yue")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" macro map "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("items"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" action"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"['),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("#{")]),s("span",{pre:!0,attrs:{class:"token moonscript"}},[t._v("action")]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),t._v(" for _ in *"),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("#{")]),s("span",{pre:!0,attrs:{class:"token moonscript"}},[t._v("items")]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),t._v(']"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" macro filter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("items"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" action"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[_ for _ in *'),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("#{")]),s("span",{pre:!0,attrs:{class:"token moonscript"}},[t._v("items")]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),t._v(" when "),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("#{")]),s("span",{pre:!0,attrs:{class:"token moonscript"}},[t._v("action")]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),t._v(']"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" macro foreach "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("items"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" action"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"for _ in *'),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("#{")]),s("span",{pre:!0,attrs:{class:"token moonscript"}},[t._v("items")]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("#{")]),s("span",{pre:!0,attrs:{class:"token moonscript"}},[t._v("action")]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),t._v('"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- file main.yue")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"utils"')]),t._v(" as "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- symbol to import all macros")]),t._v("\n  $"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("foreach")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" $each "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- rename macro $foreach to $each")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" |"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" $map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" |"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" $filter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" |"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" $each "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" _\n")])])]),s("YueDisplay",[s("pre",[t._v('-- file: utils.yue\nexport macro map = (items, action)-> "[#{action} for _ in *#{items}]"\nexport macro filter = (items, action)-> "[_ for _ in *#{items} when #{action}]"\nexport macro foreach = (items, action)-> "for _ in *#{items}\n  #{action}"\n-- file main.yue\n-- import function is not available in browser, try it in a real environment\n--[[\nimport "utils" as {\n  $, -- symbol to import all macros\n  $foreach: $each -- rename macro $foreach to $each\n}\n{1, 2, 3} |> $map(_ * 2) |> $filter(_ > 4) |> $each print _\n]]\n')])]),t._v(" "),s("h3",{attrs:{id:"builtin-macro"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#builtin-macro"}},[t._v("#")]),t._v(" Builtin Macro")]),t._v(" "),s("p",[t._v("There are some builtin macros but you can override them by declaring macros with the same names.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FILE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- get string of current module name")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LINE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- get number 2")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v("print $FILE -- get string of current module name\nprint $LINE -- get number 2\n")])]),t._v(" "),s("h2",{attrs:{id:"operator"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#operator"}},[t._v("#")]),t._v(" Operator")]),t._v(" "),s("p",[t._v("All of Lua's binary and unary operators are available. Additionally "),s("strong",[t._v("!=")]),t._v(" is as an alias for "),s("strong",[t._v("~=")]),t._v(", and either "),s("strong",[t._v("\\")]),t._v(" or "),s("strong",[t._v("::")]),t._v(" can be used to write a chaining function call like "),s("code",[t._v("tb\\func!")]),t._v(" or "),s("code",[t._v("tb::func!")]),t._v(". And Yuescipt offers some other special operators to write more expressive codes.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("tb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("func"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" tb "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("nil")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("tb")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" tb "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("nil")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v("tb\\func! if tb ~= nil\ntb::func! if tb != nil\n")])]),t._v(" "),s("h3",{attrs:{id:"table-appending"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#table-appending"}},[t._v("#")]),t._v(" Table Appending")]),t._v(" "),s("p",[t._v("The "),s("strong",[t._v("[] =")]),t._v(" operator is used to append values to tables.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("tab "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\ntab"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Value"')]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('tab = {}\ntab[] = "Value"\n')])]),t._v(" "),s("h3",{attrs:{id:"table-spreading"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#table-spreading"}},[t._v("#")]),t._v(" Table Spreading")]),t._v(" "),s("p",[t._v("You can concatenate array tables or hash tables using spread operator "),s("code",[t._v("...")]),t._v(" before expressions in table literals.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("parts "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"shoulders"')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"knees"')]),t._v("\nlyrics "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"head"')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("parts\n\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"and"')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"toes"')]),t._v("\n\ncopy "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("other"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("x")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nb "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("y")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nmerge "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('parts =\n\t* "shoulders"\n\t* "knees"\nlyrics =\n\t* "head"\n\t* ...parts\n\t* "and"\n\t* "toes"\n\ncopy = {...other}\n\na = {1, 2, 3, x: 1}\nb = {4, 5, y: 1}\nmerge = {...a, ...b}\n')])]),t._v(" "),s("h3",{attrs:{id:"metatable"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#metatable"}},[t._v("#")]),t._v(" Metatable")]),t._v(" "),s("p",[t._v("The "),s("strong",[t._v("<>")]),t._v(" operator can be used as a shortcut for metatable manipulation.")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Metatable Creation")]),s("br"),t._v("\nCreate normal table with empty bracekets "),s("strong",[t._v("<>")]),t._v(" or metamethod key which is surrounded by "),s("strong",[t._v("<>")]),t._v(".")])]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("mt "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nadd "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("right"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" mt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@value")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" right"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value\nmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__add "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" add\n\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" mt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- set field with variable of the same name")]),t._v("\nb "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("add"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\nc "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("add"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" mt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__add"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n\nd "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" c\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value\n\nclose _ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("close"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"out of scope"')]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('mt = {}\nadd = (right)=> <>: mt, value: @value + right.value\nmt.__add = add\n\na = <>: mt, value: 1\n -- set field with variable of the same name\nb = :<add>, value: 2\nc = <add>: mt.__add, value: 3\n\nd = a + b + c\nprint d.value\n\nclose _ = <close>: -> print "out of scope"\n')])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Metatable Accessing")]),s("br"),t._v("\nAccessing metatable with "),s("strong",[t._v("<>")]),t._v(" or metamethod name surrounded by "),s("strong",[t._v("<>")]),t._v(" or writing some expression in "),s("strong",[t._v("<>")]),t._v(".")])]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('-- create with metatable containing field "value"')]),t._v("\ntb "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v("\ntb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" tb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value\n\ntb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("__index")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("item")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" tb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("item\n")])])]),s("YueDisplay",[s("pre",[t._v('-- create with metatable containing field "value"\ntb = <"value">: 123\ntb.<index> = tb.<>\nprint tb.value\ntb.<> = __index: {item: "hello"}\nprint tb.item\n')])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Metatable Destructure")]),s("br"),t._v("\nDestruct metatable with metamethod key surrounded by "),s("strong",[t._v("<>")]),t._v(".")])]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("new")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("close"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" getter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tb\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" new"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" close"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" getter\n")])])]),s("YueDisplay",[s("pre",[t._v("{item, :new, :<close>, <index>: getter} = tb\nprint item, new, close, getter\n")])]),t._v(" "),s("h3",{attrs:{id:"existence"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#existence"}},[t._v("#")]),t._v(" Existence")]),t._v(" "),s("p",[t._v("The "),s("strong",[t._v("?")]),t._v(" operator can be used in a variety of contexts to check for existence.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("func?"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" abc?"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("?"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xyz\n\nx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tab?"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value\nlen "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" utf8?"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("len "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("or")]),t._v(" string?"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("len "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("or")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v("o\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" x?\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" x\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v("? "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("io"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("open")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test.txt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"w"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("write "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("close"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('func?!\nprint abc?["hello world"]?.xyz\n\nx = tab?.value\nlen = utf8?.len or string?.len or (o)-> #o\n\nif print and x?\n  print x\n\nwith? io.open "test.txt", "w"\n  \\write "hello"\n  \\close!\n')])]),t._v(" "),s("h3",{attrs:{id:"piping"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#piping"}},[t._v("#")]),t._v(" Piping")]),t._v(" "),s("p",[t._v("Instead of a series of nested function calls, you can pipe values with operator "),s("strong",[t._v("|>")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),t._v(" |"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" |"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- insert pipe item as the first argument")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" |"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- pipe with a placeholder")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- pipe expression in multiline")]),t._v("\nreadFile "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"example.txt"')]),t._v("\n  |"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" extract language"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  |"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" parse language\n  |"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" emit\n  |"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" render\n  |"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('"hello" |> print\n1 |> print 2 -- insert pipe item as the first argument\n2 |> print 1, _, 3 -- pipe with a placeholder\n-- pipe expression in multiline\nreadFile "example.txt"\n  |> extract language, {}\n  |> parse language\n  |> emit\n  |> render\n  |> print\n')])]),t._v(" "),s("h3",{attrs:{id:"nil-coalescing"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nil-coalescing"}},[t._v("#")]),t._v(" Nil Coalescing")]),t._v(" "),s("p",[t._v("The nil-coalescing operator "),s("strong",[t._v("??")]),t._v(" returns the value of its left-hand operand if it isn't "),s("strong",[t._v("nil")]),t._v("; otherwise, it evaluates the right-hand operand and returns its result. The "),s("strong",[t._v("??")]),t._v(" operator doesn't evaluate its right-hand operand if the left-hand operand evaluates to non-nil.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("local")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" b ?? c ?? d\nfunc a ?? "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\na ??"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v("local a, b, c, d\na = b ?? c ?? d\nfunc a ?? {}\na ??= false\n")])]),t._v(" "),s("h3",{attrs:{id:"implicit-object"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#implicit-object"}},[t._v("#")]),t._v(" Implicit Object")]),t._v(" "),s("p",[t._v("You can write a list of implicit structures that starts with the symbol "),s("strong",[t._v("*")]),t._v(" inside a table block. If you are creating implicit object, the fields of the object must be with the same indent.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("list "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n\nfunc\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n\ntb "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"c"')]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("objects")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@value")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("tb")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("fieldA")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@value")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("tb")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("YueDisplay",[s("pre",[t._v('list =\n  * 1\n  * 2\n  * 3\n\nfunc\n  * 1\n  * 2\n  * 3\n\ntb =\n  name: "abc"\n\n  values:\n    * "a"\n    * "b"\n    * "c"\n\n  objects:\n    * name: "a"\n      value: 1\n      func: => @value + 1\n      tb:\n        fieldA: 1\n\n    * name: "b"\n      value: 2\n      func: => @value + 2\n      tb: { }\n')])]),t._v(" "),s("h2",{attrs:{id:"module"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#module"}},[t._v("#")]),t._v(" Module")]),t._v(" "),s("h3",{attrs:{id:"import"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#import"}},[t._v("#")]),t._v(" Import")]),t._v(" "),s("p",[t._v("The import statement is a syntax sugar for requiring a module or help extracting items from an imported module.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- used as table destructure")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("C")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Ct")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Cmt")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lpeg"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" insert"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" concat "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" table\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- shortcut for requring a module")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'module'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'module_x'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"d-a-s-h-e-s"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"module.part"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- requring module with aliasing or table destruction")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"player"')]),t._v(" as "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PlayerModule")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lpeg"')]),t._v(" as "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("C")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Ct")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Cmt")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"export"')]),t._v(" as "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("one"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" two"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Something")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("umm")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("ch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('-- used as table destruction\ndo\n  import C, Ct, Cmt from require "lpeg"\n  import insert, concat from table\n\n-- shortcut for requring a module\ndo\n  import \'module\'\n  import \'module_x\'\n  import "d-a-s-h-e-s"\n  import "module.part"\n\n-- requring module with aliasing or table destruction\ndo\n  import "player" as PlayerModule\n  import "lpeg" as :C, :Ct, :Cmt\n  import "export" as {one, two, Something:{umm:{ch}}}\n')])]),t._v(" "),s("h3",{attrs:{id:"export"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#export"}},[t._v("#")]),t._v(" Export")]),t._v(" "),s("p",[t._v("The export statement offers a concise way to define modules.")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Named Export")]),s("br"),t._v("\nNamed export will define a local variable as well as adding a field in the exported table.")])]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" cool "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cat"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("What")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" this\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"def"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("\n  hallo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3434")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Something")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("umm")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cool"')]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('export a, b, c = 1, 2, 3\nexport cool = "cat"\n\nexport What = if this\n  "abc"\nelse\n  "def"\n\nexport y = ->\n  hallo = 3434\n\nexport class Something\n  umm: "cool"\n')])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Unnamed Export")]),s("br"),t._v("\nUnnamed export will add the target item into the array part of the exported table.")])]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" f "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" f\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" this\n  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("456")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" tmp\n  j "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2000")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v("d, e, f = 3, 2, 1\nexport d, e, f\n\nexport if this\n  123\nelse\n  456\n\nexport with tmp\n  j = 2000\n")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Default Export")]),s("br"),t._v("\nUsing the "),s("strong",[t._v("default")]),t._v(" keyword in export statement to replace the exported table with any thing.")])]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" default "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('export default ->\n  print "hello"\n  123\n')])]),t._v(" "),s("h2",{attrs:{id:"assignment"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#assignment"}},[t._v("#")]),t._v(" Assignment")]),t._v(" "),s("p",[t._v("The variable is dynamic typed and is defined as local by default. But you can change the scope of declaration by "),s("strong",[t._v("local")]),t._v(" and "),s("strong",[t._v("global")]),t._v(" statement.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("hello "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"world"')]),t._v("\na"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\nhello "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- uses the existing variable")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('hello = "world"\na, b, c = 1, 2, 3\nhello = 123 -- uses the existing variable\n')])]),t._v(" "),s("h3",{attrs:{id:"perform-update"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#perform-update"}},[t._v("#")]),t._v(" Perform Update")]),t._v(" "),s("p",[t._v("You can perform update assignment with many binary operators.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\nx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\nx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\ns "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("..=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"world"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- will add a new local if local variable is not exist")]),t._v("\narg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("or=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"default value"')]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('x = 1\nx += 1\nx -= 1\nx *= 10\nx /= 10\nx %= 10\ns ..= "world" -- will add a new local if local variable is not exist\narg or= "default value"\n')])]),t._v(" "),s("h3",{attrs:{id:"explicit-locals"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#explicit-locals"}},[t._v("#")]),t._v(" Explicit Locals")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("local")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"forward declare all variables as locals"')]),t._v("\n  x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" z\n  y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" z "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n  global instance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Item")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("new"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("local")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"only forward declare upper case variables"')]),t._v("\n  a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("B")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('do\n  local *\n  print "forward declare all variables as locals"\n  x = -> 1 + y + z\n  y, z = 2, 3\n  global instance = Item\\new!\n\ndo\n  local ^\n  print "only forward declare upper case variables"\n  a = 1\n  B = 2\n')])]),t._v(" "),s("h3",{attrs:{id:"explicit-globals"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#explicit-globals"}},[t._v("#")]),t._v(" Explicit Globals")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n  global "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"declare all variables as globals"')]),t._v("\n  x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" z\n  y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" z "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n  global "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"only declare upper case variables as globals"')]),t._v("\n  a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("B")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("local")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Temp")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a local value"')]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('do\n  global *\n  print "declare all variables as globals"\n  x = -> 1 + y + z\n  y, z = 2, 3\n\ndo\n  global ^\n  print "only declare upper case variables as globals"\n  a = 1\n  B = 2\n  local Temp = "a local value"\n')])]),t._v(" "),s("h2",{attrs:{id:"destructuring-assignment"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#destructuring-assignment"}},[t._v("#")]),t._v(" Destructuring Assignment")]),t._v(" "),s("p",[t._v("Destructuring assignment is a way to quickly extract values from a table by their name or position in array based tables.")]),t._v(" "),s("p",[t._v("Typically when you see a table literal, {1,2,3}, it is on the right hand side of an assignment because it is a value. Destructuring assignment swaps the role of the table literal, and puts it on the left hand side of an assign statement.")]),t._v(" "),s("p",[t._v("This is best explained with examples. Here is how you would unpack the first two values from a table:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("thing "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" thing\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b\n")])])]),s("YueDisplay",[s("pre",[t._v("thing = {1, 2}\n\n{a, b} = thing\nprint a, b\n")])]),t._v(" "),s("p",[t._v("In the destructuring table literal, the key represents the key to read from the right hand side, and the value represents the name the read value will be assigned to.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("hello")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"world"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("day")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tuesday"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("length")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("hello")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" hello"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("day")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" the_day"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" hello"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" the_day\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("day")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- OK to do simple destructuring without braces")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('obj = {\n  hello: "world"\n  day: "tuesday"\n  length: 20\n}\n\n{hello: hello, day: the_day} = obj\nprint hello, the_day\n\n:day = obj -- OK to do simple destructuring without braces\n')])]),t._v(" "),s("p",[t._v("This also works with nested data structures as well:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("obj2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("numbers")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("properties")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"green"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("13.5")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("numbers")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("first"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" second"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj2\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" first"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" second"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" color\n")])])]),s("YueDisplay",[s("pre",[t._v('obj2 = {\n  numbers: {1,2,3,4}\n  properties: {\n    color: "green"\n    height: 13.5\n  }\n}\n\n{numbers: {first, second}} = obj2\nprint first, second, color\n')])]),t._v(" "),s("p",[t._v("If the destructuring statement is complicated, feel free to spread it out over a few lines. A slightly more complicated example:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("numbers")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("first"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" second"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("properties")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" color\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj2\n")])])]),s("YueDisplay",[s("pre",[t._v("{\n  numbers: {first, second}\n  properties: {\n    color: color\n  }\n} = obj2\n")])]),t._v(" "),s("p",[t._v("It’s common to extract values from at table and assign them the local variables that have the same name as the key. In order to avoid repetition we can use the "),s("strong",[t._v(":")]),t._v(" prefix operator:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("concat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("insert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" table\n")])])]),s("YueDisplay",[s("pre",[t._v("{:concat, :insert} = table\n")])]),t._v(" "),s("p",[t._v("This is effectively the same as import, but we can rename fields we want to extract by mixing the syntax:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("mix")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("max")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("random")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" rand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" math\n")])])]),s("YueDisplay",[s("pre",[t._v("{:mix, :max, random: rand} = math\n")])]),t._v(" "),s("p",[t._v("You can write default values while doing destructuring like:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("name")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nameless"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("job")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jobless"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" person\n")])])]),s("YueDisplay",[s("pre",[t._v('{:name = "nameless", :job = "jobless"} = person\n')])]),t._v(" "),s("p",[t._v("You can use "),s("code",[t._v("_")]),t._v(" as placeholder when doing a list destructuring:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" two"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" four"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" items\n")])])]),s("YueDisplay",[s("pre",[t._v("{_, two, _, four} = items\n")])]),t._v(" "),s("h3",{attrs:{id:"destructuring-in-other-places"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#destructuring-in-other-places"}},[t._v("#")]),t._v(" Destructuring In Other Places")]),t._v(" "),s("p",[t._v("Destructuring can also show up in places where an assignment implicitly takes place. An example of this is a for loop:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("tuples "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"world"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"egg"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"head"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("left"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" right"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("tuples\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" left"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" right\n")])])]),s("YueDisplay",[s("pre",[t._v('tuples = {\n  {"hello", "world"}\n  {"egg", "head"}\n}\n\nfor {left, right} in *tuples\n  print left, right\n')])]),t._v(" "),s("p",[t._v("We know each element in the array table is a two item tuple, so we can unpack it directly in the names clause of the for statement using a destructure.")]),t._v(" "),s("h2",{attrs:{id:"if-assignment"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#if-assignment"}},[t._v("#")]),t._v(" If Assignment")]),t._v(" "),s("p",[t._v("if and elseif blocks can take an assignment in place of a conditional expression. Upon evaluating the conditional, the assignment will take place and the value that was assigned to will be used as the conditional expression. The assigned variable is only in scope for the body of the conditional, meaning it is never available if the value is not truthy.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" user "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" database"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("find_user "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"moon"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name\n")])])]),s("YueDisplay",[s("pre",[t._v('if user = database.find_user "moon"\n  print user.name\n')])]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" hello "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("os"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getenv")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"You have hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" hello\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elseif")]),t._v(" world "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("os"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getenv")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"world"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"you have world"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" world\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nothing :("')]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('if hello = os.getenv "hello"\n  print "You have hello", hello\nelseif world = os.getenv "world"\n  print "you have world", world\nelse\n  print "nothing :("\n')])]),t._v(" "),s("p",[t._v("If assignment with extra return values.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" success"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pcall")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"get result without problems"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- variable result is scoped")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OK"')]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('if success, result = pcall -> "get result without problems"\n  print result -- variable result is scoped\nprint "OK"\n')])]),t._v(" "),s("h2",{attrs:{id:"whitespace"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#whitespace"}},[t._v("#")]),t._v(" Whitespace")]),t._v(" "),s("p",[t._v("Yuescript is a whitespace significant language. You have to write some code block in the same indent with space "),s("strong",[t._v("' '")]),t._v(" or tab "),s("strong",[t._v("'\\t'")]),t._v(" like function body, value list and some control blocks. And expressions containing different whitespaces might mean different things. Tab is treated like 4 space, but it's better not mix the use of spaces and tabs.")]),t._v(" "),s("h3",{attrs:{id:"multiline-chaining"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#multiline-chaining"}},[t._v("#")]),t._v(" Multiline Chaining")]),t._v(" "),s("p",[t._v("You can write multi-line chaining function calls with a same indent.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Rx")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Observable")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fromRange "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("filter "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("concat "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Rx")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Observable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("of "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'who do we appreciate'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("map "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("..")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'!'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("subscribe "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v("Rx.Observable\n  .fromRange 1, 8\n  \\filter (x)-> x % 2 == 0\n  \\concat Rx.Observable.of 'who do we appreciate'\n  \\map (value)-> value .. '!'\n  \\subscribe print\n")])]),t._v(" "),s("h2",{attrs:{id:"comment"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#comment"}},[t._v("#")]),t._v(" Comment")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- I am a comment")]),t._v("\n\nstr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--[[")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("This")]),t._v(" is a multi"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("line comment"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("It")]),t._v("'s "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OK")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" strA "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- comment 1")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("..")]),t._v(" strB "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- comment 2")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("..")]),t._v(" strC\n\nfunc "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('--[[port]] 3000, --[[ip]] "192.168.1.1"')]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('-- I am a comment\n\nstr = --[[\nThis is a multi-line comment.\nIt\'s OK.\n]] strA \\ -- comment 1\n  .. strB \\ -- comment 2\n  .. strC\n\nfunc --[[port]] 3000, --[[ip]] "192.168.1.1"\n')])]),t._v(" "),s("h2",{attrs:{id:"try"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#try"}},[t._v("#")]),t._v(" Try")]),t._v(" "),s("p",[t._v("The syntax for Lua error handling in a common form.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("try\n  func "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\ncatch err\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" yue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("traceback err\n\nsuccess"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" try\n  func "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\ncatch err\n  yue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("traceback err\n\ntry func "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\ncatch err\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" yue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("traceback err\n\nsuccess"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" try func "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n\ntry\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"trying"')]),t._v("\n  func "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- working with if assignment pattern")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" success"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" try func "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\ncatch err\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" yue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("traceback err\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" result\n")])])]),s("YueDisplay",[s("pre",[t._v('try\n  func 1, 2, 3\ncatch err\n  print yue.traceback err\n\nsuccess, result = try\n  func 1, 2, 3\ncatch err\n  yue.traceback err\n\ntry func 1, 2, 3\ncatch err\n  print yue.traceback err\n\nsuccess, result = try func 1, 2, 3\n\ntry\n  print "trying"\n  func 1, 2, 3\n\n-- working with if assignment pattern\nif success, result = try func 1, 2, 3\ncatch err\n    print yue.traceback err\n  print result\n')])]),t._v(" "),s("h2",{attrs:{id:"attributes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#attributes"}},[t._v("#")]),t._v(" Attributes")]),t._v(" "),s("p",[t._v("The syntax support for Lua 5.4 attributes.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("const a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v("\nclose _ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" close"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Out of scope."')]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('const a = 123\nclose _ = close#: -> print "Out of scope."\n')])]),t._v(" "),s("h2",{attrs:{id:"literals"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#literals"}},[t._v("#")]),t._v(" Literals")]),t._v(" "),s("p",[t._v("All of the primitive literals in Lua can be used. This applies to numbers, strings, booleans, and "),s("strong",[t._v("nil")]),t._v(".")]),t._v(" "),s("p",[t._v("Unlike Lua, Line breaks are allowed inside of single and double quote strings without an escape sequence:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("some_string "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Here is a string\n  that has a line break in it."')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- You can mix expressions into string literals using #{} syntax.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- String interpolation is only available in double quoted strings.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"I am '),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("#{")]),s("span",{pre:!0,attrs:{class:"token moonscript"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("random")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")])]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),t._v('% sure."')]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('some_string = "Here is a string\n  that has a line break in it."\n\n-- You can mix expressions into string literals using #{} syntax.\n-- String interpolation is only available in double quoted strings.\nprint "I am #{math.random! * 100}% sure."\n')])]),t._v(" "),s("h2",{attrs:{id:"function-literals"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#function-literals"}},[t._v("#")]),t._v(" Function Literals")]),t._v(" "),s("p",[t._v("All functions are created using a function expression. A simple function is denoted using the arrow: "),s("strong",[t._v("->")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("my_function "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("\nmy_function"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- call the empty function")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v("my_function = ->\nmy_function() -- call the empty function\n")])]),t._v(" "),s("p",[t._v("The body of the function can either be one statement placed directly after the arrow, or it can be a series of statements indented on the following lines:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("func_a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world"')]),t._v("\n\nfunc_b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("\n  value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"The value:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value\n")])])]),s("YueDisplay",[s("pre",[t._v('func_a = -> print "hello world"\n\nfunc_b = ->\n  value = 100\n  print "The value:", value\n')])]),t._v(" "),s("p",[t._v("If a function has no arguments, it can be called using the ! operator, instead of empty parentheses. The ! invocation is the preferred way to call functions with no arguments.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("func_a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\nfunc_b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v("func_a!\nfunc_b()\n")])]),t._v(" "),s("p",[t._v("Functions with arguments can be created by preceding the arrow with a list of argument names in parentheses:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("sum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sum"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" y\n")])])]),s("YueDisplay",[s("pre",[t._v('sum = (x, y)-> print "sum", x + y\n')])]),t._v(" "),s("p",[t._v("Functions can be called by listing the arguments after the name of an expression that evaluates to a function. When chaining together function calls, the arguments are applied to the closest function to the left.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("sum "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" sum "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n\na b c "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"c"')]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('sum 10, 20\nprint sum 10, 20\n\na b c "a", "b", "c"\n')])]),t._v(" "),s("p",[t._v("In order to avoid ambiguity in when calling functions, parentheses can also be used to surround the arguments. This is required here in order to make sure the right arguments get sent to the right functions.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"y:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('print "x:", sum(10, 20), "y:", sum(30, 40)\n')])]),t._v(" "),s("p",[t._v("There must not be any space between the opening parenthesis and the function.")]),t._v(" "),s("p",[t._v("Functions will coerce the last statement in their body into a return statement, this is called implicit return:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("sum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" y\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"The sum is "')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sum "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('sum = (x, y) -> x + y\nprint "The sum is ", sum 10, 20\n')])]),t._v(" "),s("p",[t._v("And if you need to explicitly return, you can use the return keyword:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("sum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" y\n")])])]),s("YueDisplay",[s("pre",[t._v("sum = (x, y)-> return x + y\n")])]),t._v(" "),s("p",[t._v("Just like in Lua, functions can return multiple values. The last statement must be a list of values separated by commas:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("mystery "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" y\na"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mystery "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v("mystery = (x, y)-> x + y, x - y\na, b = mystery 10, 20\n")])]),t._v(" "),s("h3",{attrs:{id:"fat-arrows"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fat-arrows"}},[t._v("#")]),t._v(" Fat Arrows")]),t._v(" "),s("p",[t._v("Because it is an idiom in Lua to send an object as the first argument when calling a method, a special syntax is provided for creating functions which automatically includes a self argument.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("func "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@value")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" num\n")])])]),s("YueDisplay",[s("pre",[t._v("func = (num)=> @value + num\n")])]),t._v(" "),s("h3",{attrs:{id:"argument-defaults"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#argument-defaults"}},[t._v("#")]),t._v(" Argument Defaults")]),t._v(" "),s("p",[t._v("It is possible to provide default values for the arguments of a function. An argument is determined to be empty if its value is nil. Any nil arguments that have a default value will be replace before the body of the function is run.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("my_function "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"something"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" height "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello I am"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"My height is"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" height\n")])])]),s("YueDisplay",[s("pre",[t._v('my_function = (name = "something", height = 100)->\n  print "Hello I am", name\n  print "My height is", height\n')])]),t._v(" "),s("p",[t._v("An argument default value expression is evaluated in the body of the function in the order of the argument declarations. For this reason default values have access to previously declared arguments.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("some_args "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" y\n")])])]),s("YueDisplay",[s("pre",[t._v("some_args = (x = 100, y = x + 1000)->\n  print x + y\n")])]),t._v(" "),s("h3",{attrs:{id:"considerations"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#considerations"}},[t._v("#")]),t._v(" Considerations")]),t._v(" "),s("p",[t._v("Because of the expressive parentheses-less way of calling functions, some restrictions must be put in place to avoid parsing ambiguity involving whitespace.")]),t._v(" "),s("p",[t._v("The minus sign plays two roles, a unary negation operator and a binary subtraction operator. Consider how the following examples compile:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\nb "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\nc "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("y\nd "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" z\n")])])]),s("YueDisplay",[s("pre",[t._v("a = x - 10\nb = x-10\nc = x -y\nd = x- z\n")])]),t._v(" "),s("p",[t._v("The precedence of the first argument of a function call can be controlled using whitespace if the argument is a literal string. In Lua, it is common to leave off parentheses when calling a function with a single string or table literal.")]),t._v(" "),s("p",[t._v("When there is no space between a variable and a string literal, the function call takes precedence over any following expressions. No other arguments can be passed to the function when it is called this way.")]),t._v(" "),s("p",[t._v("Where there is a space following a variable and a string literal, the function call acts as show above. The string literal belongs to any following expressions (if they exist), which serves as the argument list.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" func"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\ny "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" func "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('x = func"hello" + 100\ny = func "hello" + 100\n')])]),t._v(" "),s("h3",{attrs:{id:"multi-line-arguments"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#multi-line-arguments"}},[t._v("#")]),t._v(" Multi-line arguments")]),t._v(" "),s("p",[t._v("When calling functions that take a large number of arguments, it is convenient to split the argument list over multiple lines. Because of the white-space sensitive nature of the language, care must be taken when splitting up the argument list.")]),t._v(" "),s("p",[t._v("If an argument list is to be continued onto the next line, the current line must end in a comma. And the following line must be indented more than the current indentation. Once indented, all other argument lines must be at the same level of indentation to be part of the argument list")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("my_func "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n\ncool_func "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v("my_func 5, 4, 3,\n  8, 9, 10\n\ncool_func 1, 2,\n  3, 4,\n  5, 6,\n  7, 8\n")])]),t._v(" "),s("p",[t._v("This type of invocation can be nested. The level of indentation is used to determine to which function the arguments belong to.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("my_func "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" another_func "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v("my_func 5, 6, 7,\n  6, another_func 6, 7, 8,\n    9, 1, 2,\n  5, 4\n")])]),t._v(" "),s("p",[t._v("Because tables also use the comma as a delimiter, this indentation syntax is helpful for letting values be part of the argument list instead of being part of the table.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a_func "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v("x = {\n  1, 2, 3, 4, a_func 4, 5,\n    5, 6,\n  8, 9, 10\n}\n")])]),t._v(" "),s("p",[t._v("Although uncommon, notice how we can give a deeper indentation for function arguments if we know we will be using a lower indentation further on.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" my_func "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v("y = { my_func 1, 2, 3,\n   4, 5,\n  5, 6, 7\n}\n")])]),t._v(" "),s("p",[t._v("The same thing can be done with other block level statements like conditionals. We can use indentation level to determine what statement a value belongs to:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" func "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"world"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"I am inside if"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" func "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"world"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"I am inside if"')]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('if func 1, 2, 3,\n  "hello",\n  "world"\n    print "hello"\n    print "I am inside if"\n\nif func 1, 2, 3,\n    "hello",\n    "world"\n  print "hello"\n  print "I am inside if"\n')])]),t._v(" "),s("h2",{attrs:{id:"backcalls"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#backcalls"}},[t._v("#")]),t._v(" Backcalls")]),t._v(" "),s("p",[t._v("Backcalls are used for unnesting callbacks. They are defined using arrows pointed to the left as the last parameter by default filling in a function call. All the syntax is mostly the same as regular arrow functions except that it is just pointing the other way and the function body does not require indent.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" f\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('<- f\nprint "hello"\n')])]),t._v(" "),s("p",[t._v("Fat arrow functions are also available.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" f\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@value")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v("<= f\nprint @value\n")])]),t._v(" "),s("p",[t._v("You can specify a placeholder for where you want the backcall function to go as a parameter.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" map _"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v("(x) <- map _, {1, 2, 3}\nx * 2\n")])]),t._v(" "),s("p",[t._v("If you wish to have further code after your backcalls, you can set them aside with a do statement.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" readAsync "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"filename.txt"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" data\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" processAsync data\n  check info\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msg\n")])])]),s("YueDisplay",[s("pre",[t._v('result, msg = do\n  (data) <- readAsync "filename.txt"\n  print data\n  (info) <- processAsync data\n  check info\nprint result, msg\n')])]),t._v(" "),s("h2",{attrs:{id:"table-literals"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#table-literals"}},[t._v("#")]),t._v(" Table Literals")]),t._v(" "),s("p",[t._v("Like in Lua, tables are delimited in curly braces.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("some_values "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v("some_values = { 1, 2, 3, 4 }\n")])]),t._v(" "),s("p",[t._v("Unlike Lua, assigning a value to a key in a table is done with "),s("strong",[t._v(":")]),t._v(" (instead of "),s("strong",[t._v("=")]),t._v(").")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("some_values "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Bill"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("age")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"favorite food"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rice"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('some_values = {\n  name: "Bill",\n  age: 200,\n  ["favorite food"]: "rice"\n}\n')])]),t._v(" "),s("p",[t._v("The curly braces can be left off if a single table of key value pairs is being assigned.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("profile "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"4 feet"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("shoe_size")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("favorite_foods")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ice cream"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"donuts"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('profile =\n  height: "4 feet",\n  shoe_size: 13,\n  favorite_foods: {"ice cream", "donuts"}\n')])]),t._v(" "),s("p",[t._v("Newlines can be used to delimit values instead of a comma (or both):")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("values "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"superman"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("occupation")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"crime fighting"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('values = {\n  1, 2, 3, 4\n  5, 6, 7, 8\n  name: "superman"\n  occupation: "crime fighting"\n}\n')])]),t._v(" "),s("p",[t._v("When creating a single line table literal, the curly braces can also be left off:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("my_function "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("dance")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Tango"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("partner")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"none"')]),t._v("\n\ny "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dog"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("legs")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("tails")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('my_function dance: "Tango", partner: "none"\n\ny = type: "dog", legs: 4, tails: 1\n')])]),t._v(" "),s("p",[t._v("The keys of a table literal can be language keywords without being escaped:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("tbl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"something"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hunger"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('tbl = {\n  do: "something"\n  end: "hunger"\n}\n')])]),t._v(" "),s("p",[t._v("If you are constructing a table out of variables and wish the keys to be the same as the variable names, then the "),s("strong",[t._v(":")]),t._v(" prefix operator can be used:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("hair "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"golden"')]),t._v("\nheight "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v("\nperson "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("hair")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("shoe_size")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nprint_table "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("hair")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('hair = "golden"\nheight = 200\nperson = { :hair, :height, shoe_size: 40 }\n\nprint_table :hair, :height\n')])]),t._v(" "),s("p",[t._v("If you want the key of a field in the table to to be result of an expression, then you can wrap it in "),s("strong",[t._v("[ ]")]),t._v(", just like in Lua. You can also use a string literal directly as a key, leaving out the square brackets. This is useful if your key has any special characters.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("t "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('t = {\n  [1 + 2]: "hello"\n  "hello world": true\n}\n')])]),t._v(" "),s("h2",{attrs:{id:"comprehensions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#comprehensions"}},[t._v("#")]),t._v(" Comprehensions")]),t._v(" "),s("p",[t._v("Comprehensions provide a convenient syntax for constructing a new table by iterating over some existing object and applying an expression to its values. There are two kinds of comprehensions: list comprehensions and table comprehensions. They both produce Lua tables; list comprehensions accumulate values into an array-like table, and table comprehensions let you set both the key and the value on each iteration.")]),t._v(" "),s("h3",{attrs:{id:"list-comprehensions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#list-comprehensions"}},[t._v("#")]),t._v(" List Comprehensions")]),t._v(" "),s("p",[t._v("The following creates a copy of the items table but with all the values doubled.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("items "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\ndoubled "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("item "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" item "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ipairs")]),t._v(" items"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v("items = { 1, 2, 3, 4 }\ndoubled = [item * 2 for i, item in ipairs items]\n")])]),t._v(" "),s("p",[t._v("The items included in the new table can be restricted with a when clause:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("iter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ipairs")]),t._v(" items\nslice "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("item "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" item "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" iter "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("when")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v("iter = ipairs items\nslice = [item for i, item in iter when i > 1 and i < 3]\n")])]),t._v(" "),s("p",[t._v("Because it is common to iterate over the values of a numerically indexed table, an "),s("strong",[t._v("*")]),t._v(" operator is introduced. The doubled example can be rewritten as:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("doubled "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("item "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" item "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("items"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v("doubled = [item * 2 for item in *items]\n")])]),t._v(" "),s("p",[t._v("The for and when clauses can be chained as much as desired. The only requirement is that a comprehension has at least one for clause.")]),t._v(" "),s("p",[t._v("Using multiple for clauses is the same as using nested loops:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("x_coords "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\ny_coords "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\npoints "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("x_coords "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" y "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("y_coords"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v("x_coords = {4, 5, 6, 7}\ny_coords = {9, 2, 3}\n\npoints = [{x, y} for x in *x_coords \\\nfor y in *y_coords]\n")])]),t._v(" "),s("p",[t._v("Numeric for loops can also be used in comprehensions:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("evens "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("when")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v("evens = [i for i = 1, 100 when i % 2 == 0]\n")])]),t._v(" "),s("h3",{attrs:{id:"table-comprehensions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#table-comprehensions"}},[t._v("#")]),t._v(" Table Comprehensions")]),t._v(" "),s("p",[t._v("The syntax for table comprehensions is very similar, only differing by using "),s("strong",[t._v("{")]),t._v(" and "),s("strong",[t._v("}")]),t._v(" and taking two values from each iteration.")]),t._v(" "),s("p",[t._v("This example makes a copy of the tablething:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("thing "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"red"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fast"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nthing_copy "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("k"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" k"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pairs")]),t._v(" thing"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('thing = {\n  color: "red"\n  name: "fast"\n  width: 123\n}\n\nthing_copy = {k, v for k, v in pairs thing}\n')])]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("no_color "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("k"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" k"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pairs")]),t._v(" thing "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("when")]),t._v(" k "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"color"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('no_color = {k, v for k, v in pairs thing when k != "color"}\n')])]),t._v(" "),s("p",[t._v("The "),s("strong",[t._v("*")]),t._v(" operator is also supported. Here we create a square root look up table for a few numbers.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("numbers "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nsqrts "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sqrt")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("numbers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v("numbers = {1, 2, 3, 4}\nsqrts = {i, math.sqrt i for i in *numbers}\n")])]),t._v(" "),s("p",[t._v("The key-value tuple in a table comprehension can also come from a single expression, in which case the expression should return two values. The first is used as the key and the second is used as the value:")]),t._v(" "),s("p",[t._v("In this example we convert an array of pairs to a table where the first item in the pair is the key and the second is the value.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("tuples "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"world"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bar"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\ntbl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("unpack")]),t._v(" tuple "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" tuple "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("tuples"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('tuples = { {"hello", "world"}, {"foo", "bar"} }\ntbl = {unpack tuple for tuple in *tuples}\n')])]),t._v(" "),s("h3",{attrs:{id:"slicing"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#slicing"}},[t._v("#")]),t._v(" Slicing")]),t._v(" "),s("p",[t._v("A special syntax is provided to restrict the items that are iterated over when using the "),s("strong",[t._v("*")]),t._v(" operator. This is equivalent to setting the iteration bounds and a step size in a for loop.")]),t._v(" "),s("p",[t._v("Here we can set the minimum and maximum bounds, taking all items with indexes between 1 and 5 inclusive:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("slice "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("item "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" item "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("items"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v("slice = [item for item in *items[1, 5]]\n")])]),t._v(" "),s("p",[t._v("Any of the slice arguments can be left off to use a sensible default. In this example, if the max index is left off it defaults to the length of the table. This will take everything but the first element:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("slice "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("item "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" item "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("items"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v("slice = [item for item in *items[2,]]\n")])]),t._v(" "),s("p",[t._v("If the minimum bound is left out, it defaults to 1. Here we only provide a step size and leave the other bounds blank. This takes all odd indexed items: (1, 3, 5, …)")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("slice "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("item "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" item "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("items"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v("slice = [item for item in *items[,,2]]\n")])]),t._v(" "),s("h2",{attrs:{id:"for-loop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#for-loop"}},[t._v("#")]),t._v(" For Loop")]),t._v(" "),s("p",[t._v("There are two for loop forms, just like in Lua. A numeric one and a generic one:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" i\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" k "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- an optional step provided")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" k\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pairs")]),t._v(" object\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value\n")])])]),s("YueDisplay",[s("pre",[t._v("for i = 10, 20\n  print i\n\nfor k = 1, 15, 2 -- an optional step provided\n  print k\n\nfor key, value in pairs object\n  print key, value\n")])]),t._v(" "),s("p",[t._v("The slicing and "),s("strong",[t._v("*")]),t._v(" operators can be used, just like with comprehensions:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" item "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("items"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" item\n")])])]),s("YueDisplay",[s("pre",[t._v("for item in *items[2, 4]\n  print item\n")])]),t._v(" "),s("p",[t._v("A shorter syntax is also available for all variations when the body is only a single line:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" item "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("items "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" item\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" j "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" j\n")])])]),s("YueDisplay",[s("pre",[t._v("for item in *items do print item\n\nfor j = 1, 10, 3 do print j\n")])]),t._v(" "),s("p",[t._v("A for loop can also be used as an expression. The last statement in the body of the for loop is coerced into an expression and appended to an accumulating array table.")]),t._v(" "),s("p",[t._v("Doubling every even number:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("doubled_evens "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n    i\n")])])]),s("YueDisplay",[s("pre",[t._v("doubled_evens = for i = 1, 20\n  if i % 2 == 0\n    i * 2\n  else\n    i\n")])]),t._v(" "),s("p",[t._v("You can also filter values by combining the for loop expression with the continue statement.")]),t._v(" "),s("p",[t._v("For loops at the end of a function body are not accumulated into a table for a return value (Instead the function will return nil). Either an explicit return statement can be used, or the loop can be converted into a list comprehension.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("func_a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" i\nfunc_b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" i\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" func_a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- prints nil")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" func_b"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- prints table object")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v("func_a = -> for i = 1, 10 do print i\nfunc_b = -> return for i = 1, 10 do i\n\nprint func_a! -- prints nil\nprint func_b! -- prints table object\n")])]),t._v(" "),s("p",[t._v("This is done to avoid the needless creation of tables for functions that don’t need to return the results of the loop.")]),t._v(" "),s("h2",{attrs:{id:"repeat-loop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#repeat-loop"}},[t._v("#")]),t._v(" Repeat Loop")]),t._v(" "),s("p",[t._v("The repeat loop comes from Lua:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\nrepeat\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" i\n  i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nuntil i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v("i = 10\nrepeat\n  print i\n  i -= 1\nuntil i == 0\n")])]),t._v(" "),s("h2",{attrs:{id:"while-loop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#while-loop"}},[t._v("#")]),t._v(" While Loop")]),t._v(" "),s("p",[t._v("The while loop also comes in four variations:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" i\n  i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" running "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" my_function"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v("i = 10\nwhile i > 0\n  print i\n  i -= 1\n\nwhile running == true do my_function!\n")])]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\nuntil i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" i\n  i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\nuntil running "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" my_function"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v("i = 10\nuntil i == 0\n  print i\n  i -= 1\nuntil running == false do my_function!\n")])]),t._v(" "),s("p",[t._v("Like for loops, the while loop can also be used an expression. Additionally, for a function to return the accumulated value of a while loop, the statement must be explicitly returned.")]),t._v(" "),s("h2",{attrs:{id:"continue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#continue"}},[t._v("#")]),t._v(" Continue")]),t._v(" "),s("p",[t._v("A continue statement can be used to skip the current iteration in a loop.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n  i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" i\n")])])]),s("YueDisplay",[s("pre",[t._v("i = 0\nwhile i < 10\n  i += 1\n  continue if i % 2 == 0\n  print i\n")])]),t._v(" "),s("p",[t._v("continue can also be used with loop expressions to prevent that iteration from accumulating into the result. This examples filters the array table into just even numbers:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("my_numbers "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nodds "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("my_numbers\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  x\n")])])]),s("YueDisplay",[s("pre",[t._v("my_numbers = {1, 2, 3, 4, 5, 6}\nodds = for x in *my_numbers\n  continue if x % 2 == 1\n  x\n")])]),t._v(" "),s("h2",{attrs:{id:"conditionals"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#conditionals"}},[t._v("#")]),t._v(" Conditionals")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("have_coins "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" have_coins\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Got coins"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"No coins"')]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('have_coins = false\nif have_coins\n  print "Got coins"\nelse\n  print "No coins"\n')])]),t._v(" "),s("p",[t._v("A short syntax for single statements can also be used:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("have_coins "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" have_coins "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Got coins"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"No coins"')]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('have_coins = false\nif have_coins then print "Got coins" else print "No coins"\n')])]),t._v(" "),s("p",[t._v("Because if statements can be used as expressions, this can also be written as:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("have_coins "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" have_coins "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Got coins"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"No coins"')]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('have_coins = false\nprint if have_coins then "Got coins" else "No coins"\n')])]),t._v(" "),s("p",[t._v("Conditionals can also be used in return statements and assignments:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("is_tall "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Rob"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n\nmessage "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" is_tall "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Rob"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"I am very tall"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"I am not so tall"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" message "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- prints: I am very tall")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('is_tall = (name) ->\n  if name == "Rob"\n    true\n  else\n    false\n\nmessage = if is_tall "Rob"\n  "I am very tall"\nelse\n  "I am not so tall"\n\nprint message -- prints: I am very tall\n')])]),t._v(" "),s("p",[t._v("The opposite of if is unless:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unless")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("os"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("date")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%A"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Monday"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"it is not Monday!"')]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('unless os.date("%A") == "Monday"\n  print "it is not Monday!"\n')])]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"You\'re lucky!"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unless")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("random")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('print "You\'re lucky!" unless math.random! > 0.1\n')])]),t._v(" "),s("h2",{attrs:{id:"line-decorators"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#line-decorators"}},[t._v("#")]),t._v(" Line Decorators")]),t._v(" "),s("p",[t._v("For convenience, the for loop and if statement can be applied to single statements at the end of the line:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Rob"')]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('print "hello world" if name == "Rob"\n')])]),t._v(" "),s("p",[t._v("And with basic loops:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"item: "')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" item "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" item "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("items\n")])])]),s("YueDisplay",[s("pre",[t._v('print "item: ", item for item in *items\n')])]),t._v(" "),s("h2",{attrs:{id:"switch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#switch"}},[t._v("#")]),t._v(" Switch")]),t._v(" "),s("p",[t._v("The switch statement is shorthand for writing a series of if statements that check against the same value. Note that the value is only evaluated once. Like if statements, switches can have an else block to handle no matches. Comparison is done with the == operator.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Dan"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" name\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("when")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Robert"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"You are Robert"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("when")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Dan"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Daniel"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Your name, it\'s Dan"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"I don\'t know about your name"')]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('name = "Dan"\nswitch name\n  when "Robert"\n    print "You are Robert"\n  when "Dan", "Daniel"\n    print "Your name, it\'s Dan"\n  else\n    print "I don\'t know about your name"\n')])]),t._v(" "),s("p",[t._v("A switch when clause can match against multiple values by listing them out comma separated.")]),t._v(" "),s("p",[t._v("Switches can be used as expressions as well, here we can assign the result of the switch to a variable:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nnext_number "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" b\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("when")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("when")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"can\'t count that high!"')]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('b = 1\nnext_number = switch b\n  when 1\n    2\n  when 2\n    3\n  else\n    error "can\'t count that high!"\n')])]),t._v(" "),s("p",[t._v("We can use the then keyword to write a switch’s when block on a single line. No extra keyword is needed to write the else block on a single line.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("msg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("random")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("when")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"you are lucky"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("when")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"you are almost lucky"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"not so lucky"')]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('msg = switch math.random(1, 5)\n  when 1 then "you are lucky"\n  when 2 then "you are almost lucky"\n  else "not so lucky"\n')])]),t._v(" "),s("p",[t._v("It is worth noting the order of the case comparison expression. The case’s expression is on the left hand side. This can be useful if the case’s expression wants to overwrite how the comparison is done by defining an eq metamethod.")]),t._v(" "),s("h3",{attrs:{id:"table-matching"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#table-matching"}},[t._v("#")]),t._v(" Table Matching")]),t._v(" "),s("p",[t._v("You can do table matching in a switch when clause, if the table can be destructured by a specific structure and get non-nil values.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("items "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("x")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("y")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" item "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("items\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" item\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("when")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("x")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("y")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Vec2 '),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("#{")]),s("span",{pre:!0,attrs:{class:"token moonscript"}},[t._v("x")]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),t._v(", "),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("#{")]),s("span",{pre:!0,attrs:{class:"token moonscript"}},[t._v("y")]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),t._v('"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("when")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"size '),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("#{")]),s("span",{pre:!0,attrs:{class:"token moonscript"}},[t._v("width")]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),t._v(", "),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("#{")]),s("span",{pre:!0,attrs:{class:"token moonscript"}},[t._v("height")]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),t._v('"')]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('items =\n  * x: 100\n    y: 200\n  * width: 300\n    height: 400\n\nfor item in *items\n  switch item\n    when :x, :y\n      print "Vec2 #{x}, #{y}"\n    when :width, :height\n      print "size #{width}, #{height}"\n')])]),t._v(" "),s("p",[t._v("You can use default values to optionally destructure the table for some fields.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("item "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("pos")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("x")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("y")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" item "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- get error: attempt to index a nil value (field 'pos')")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" item\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("when")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("pos")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("x")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("y")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Vec2 '),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("#{")]),s("span",{pre:!0,attrs:{class:"token moonscript"}},[t._v("x")]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),t._v(", "),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("#{")]),s("span",{pre:!0,attrs:{class:"token moonscript"}},[t._v("y")]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- table destructuring will still pass")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v("item = {}\n\n{pos: {:x = 50, :y = 200}} = item -- get error: attempt to index a nil value (field 'pos')\n\nswitch item\n  when {pos: {:x = 50, :y = 200}}\n    print \"Vec2 #{x}, #{y}\" -- table destructuring will still pass\n")])]),t._v(" "),s("h2",{attrs:{id:"object-oriented-programming"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#object-oriented-programming"}},[t._v("#")]),t._v(" Object Oriented Programming")]),t._v(" "),s("p",[t._v("In these examples, the generated Lua code may appear overwhelming. It is best to focus on the meaning of the Yuescript code at first, then look into the Lua code if you wish to know the implementation details.")]),t._v(" "),s("p",[t._v("A simple class:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Inventory")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("new")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@items")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("add_item")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@items")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@items")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@items")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v("class Inventory\n  new: =>\n    @items = {}\n\n  add_item: (name)=>\n    if @items[name]\n      @items[name] += 1\n    else\n      @items[name] = 1\n")])]),t._v(" "),s("p",[t._v("A class is declared with a class statement followed by a table-like declaration where all of the methods and properties are listed.")]),t._v(" "),s("p",[t._v("The new property is special in that it will become the constructor.")]),t._v(" "),s("p",[t._v("Notice how all the methods in the class use the fat arrow function syntax. When calling methods on a instance, the instance itself is sent in as the first argument. The fat arrow handles the creation of a self argument.")]),t._v(" "),s("p",[t._v("The @ prefix on a variable name is shorthand for self.. @items becomes self.items.")]),t._v(" "),s("p",[t._v("Creating an instance of the class is done by calling the name of the class as a function.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("inv "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Inventory")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\ninv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("add_item "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"t-shirt"')]),t._v("\ninv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("add_item "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pants"')]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('inv = Inventory!\ninv\\add_item "t-shirt"\ninv\\add_item "pants"\n')])]),t._v(" "),s("p",[t._v("Because the instance of the class needs to be sent to the methods when they are called, the \\ operator is used.")]),t._v(" "),s("p",[t._v("All properties of a class are shared among the instances. This is fine for functions, but for other types of objects, undesired results may occur.")]),t._v(" "),s("p",[t._v("Consider the example below, the clothes property is shared amongst all instances, so modifications to it in one instance will show up in another:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("clothes")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("give_item")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("table"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@clothes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name\n\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\nb "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n\na"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("give_item "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pants"')]),t._v("\nb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("give_item "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"shirt"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- will print both pants and shirt")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" item "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" item "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clothes\n")])])]),s("YueDisplay",[s("pre",[t._v('class Person\n  clothes: {}\n  give_item: (name)=>\n    table.insert @clothes, name\n\na = Person!\nb = Person!\n\na\\give_item "pants"\nb\\give_item "shirt"\n\n-- will print both pants and shirt\nprint item for item in *a.clothes\n')])]),t._v(" "),s("p",[t._v("The proper way to avoid this problem is to create the mutable state of the object in the constructor:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("new")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@clothes")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v("class Person\n  new: =>\n    @clothes = {}\n")])]),t._v(" "),s("h3",{attrs:{id:"inheritance"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#inheritance"}},[t._v("#")]),t._v(" Inheritance")]),t._v(" "),s("p",[t._v("The extends keyword can be used in a class declaration to inherit the properties and methods from another class.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BackPack")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Inventory")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("size")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("add_item")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@items")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" size "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"backpack is full"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),t._v(" name\n")])])]),s("YueDisplay",[s("pre",[t._v('class BackPack extends Inventory\n  size: 10\n  add_item: (name)=>\n    if #@items > size then error "backpack is full"\n    super name\n')])]),t._v(" "),s("p",[t._v("Here we extend our Inventory class, and limit the amount of items it can carry.")]),t._v(" "),s("p",[t._v("In this example, we don’t define a constructor on the subclass, so the parent class' constructor is called when we make a new instance. If we did define a constructor then we can use the super method to call the parent constructor.")]),t._v(" "),s("p",[t._v("Whenever a class inherits from another, it sends a message to the parent class by calling the method __inherited on the parent class if it exists. The function receives two arguments, the class that is being inherited and the child class.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Shelf")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@__inherited")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("child"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@__name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"was inherited by"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" child"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__name\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- will print: Shelf was inherited by Cupboard")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Cupboard")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Shelf")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('class Shelf\n  @__inherited: (child)=>\n    print @__name, "was inherited by", child.__name\n\n-- will print: Shelf was inherited by Cupboard\nclass Cupboard extends Shelf\n')])]),t._v(" "),s("h3",{attrs:{id:"super"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#super"}},[t._v("#")]),t._v(" Super")]),t._v(" "),s("p",[s("strong",[t._v("super")]),t._v(" is a special keyword that can be used in two different ways: It can be treated as an object, or it can be called like a function. It only has special functionality when inside a class.")]),t._v(" "),s("p",[t._v("When called as a function, it will call the function of the same name in the parent class. The current self will automatically be passed as the first argument. (As seen in the inheritance example above)")]),t._v(" "),s("p",[t._v("When super is used as a normal value, it is a reference to the parent class object.")]),t._v(" "),s("p",[t._v("It can be accessed like any of object in order to retrieve values in the parent class that might have been shadowed by the child class.")]),t._v(" "),s("p",[t._v("When the \\ calling operator is used with super, self is inserted as the first argument instead of the value of super itself. When using . to retrieve a function, the raw function is returned.")]),t._v(" "),s("p",[t._v("A few examples of using super in different ways:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyClass")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ParentClass")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("a_method")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- the following have the same effect:")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"world"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("a_method "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"world"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a_method "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"world"')]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- super as a value is equal to the parent class:")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("assert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ParentClass")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('class MyClass extends ParentClass\n  a_method: =>\n    -- the following have the same effect:\n    super "hello", "world"\n    super\\a_method "hello", "world"\n    super.a_method self, "hello", "world"\n\n    -- super as a value is equal to the parent class:\n    assert super == ParentClass\n')])]),t._v(" "),s("p",[s("strong",[t._v("super")]),t._v(" can also be used on left side of a Function Stub. The only major difference is that instead of the resulting function being bound to the value of super, it is bound to self.")]),t._v(" "),s("h3",{attrs:{id:"types"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#types"}},[t._v("#")]),t._v(" Types")]),t._v(" "),s("p",[t._v("Every instance of a class carries its type with it. This is stored in the special __class property. This property holds the class object. The class object is what we call to build a new instance. We can also index the class object to retrieve class methods and properties.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BackPack")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("assert")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__class "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BackPack")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BackPack")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("size "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- prints 10")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v("b = BackPack!\nassert b.__class == BackPack\n\nprint BackPack.size -- prints 10\n")])]),t._v(" "),s("h3",{attrs:{id:"class-objects"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#class-objects"}},[t._v("#")]),t._v(" Class Objects")]),t._v(" "),s("p",[t._v("The class object is what we create when we use a class statement. The class object is stored in a variable of the same name of the class.")]),t._v(" "),s("p",[t._v("The class object can be called like a function in order to create new instances. That’s how we created instances of classes in the examples above.")]),t._v(" "),s("p",[t._v("A class is made up of two tables. The class table itself, and the base table. The base is used as the metatable for all the instances. All properties listed in the class declaration are placed in the base.")]),t._v(" "),s("p",[t._v("The class object’s metatable reads properties from the base if they don’t exist in the class object. This means we can access functions and properties directly from the class.")]),t._v(" "),s("p",[t._v("It is important to note that assigning to the class object does not assign into the base, so it’s not a valid way to add new methods to instances. Instead the base must explicitly be changed. See the __base field below.")]),t._v(" "),s("p",[t._v("The class object has a couple special properties:")]),t._v(" "),s("p",[t._v("The name of the class as when it was declared is stored as a string in the __name field of the class object.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BackPack")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__name "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- prints Backpack")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v("print BackPack.__name -- prints Backpack\n")])]),t._v(" "),s("p",[t._v("The base object is stored in __base. We can modify this table to add functionality to instances that have already been created and ones that are yet to be created.")]),t._v(" "),s("p",[t._v("If the class extends from anything, the parent class object is stored in __parent.")]),t._v(" "),s("h3",{attrs:{id:"class-variables"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#class-variables"}},[t._v("#")]),t._v(" Class Variables")]),t._v(" "),s("p",[t._v("We can create variables directly in the class object instead of in the base by using @ in the front of the property name in a class declaration.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Things")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@some_func")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello from"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@__name")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Things")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("some_func"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- class variables not visible in instances")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("assert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Things")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("some_func "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("nil")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('class Things\n  @some_func: => print "Hello from", @__name\n\nThings\\some_func!\n\n-- class variables not visible in instances\nassert Things().some_func == nil\n')])]),t._v(" "),s("p",[t._v("In expressions, we can use @@ to access a value that is stored in the __class of self. Thus, @@hello is shorthand for self.__class.hello.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Counter")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@count")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("new")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@@count")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Counter")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Counter")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Counter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- prints 2")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v("class Counter\n  @count: 0\n\n  new: =>\n    @@count += 1\n\nCounter!\nCounter!\n\nprint Counter.count -- prints 2\n")])]),t._v(" "),s("p",[t._v("The calling semantics of @@ are similar to @. Calling a @@ name will pass the class in as the first argument using Lua’s colon syntax.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@@hello")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v("@@hello 1,2,3,4\n")])]),t._v(" "),s("h3",{attrs:{id:"class-declaration-statements"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#class-declaration-statements"}},[t._v("#")]),t._v(" Class Declaration Statements")]),t._v(" "),s("p",[t._v("In the body of a class declaration, we can have normal expressions in addition to key/value pairs. In this context, self is equal to the class object.")]),t._v(" "),s("p",[t._v("Here is an alternative way to create a class variable compared to what’s described above:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Things")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@class_var")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world"')]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('class Things\n  @class_var = "hello world"\n')])]),t._v(" "),s("p",[t._v("These expressions are executed after all the properties have been added to the base.")]),t._v(" "),s("p",[t._v("All variables declared in the body of the class are local to the classes properties. This is convenient for placing private values or helper functions that only the class methods can access:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MoreThings")]),t._v("\n  secret "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v("\n  log "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"LOG:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msg\n\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("some_method")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n    log "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world: "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("..")]),t._v(" secret\n")])])]),s("YueDisplay",[s("pre",[t._v('class MoreThings\n  secret = 123\n  log = (msg)-> print "LOG:", msg\n\n  some_method: =>\n    log "hello world: " .. secret\n')])]),t._v(" "),s("h3",{attrs:{id:"and-values"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#and-values"}},[t._v("#")]),t._v(" @ and @@ Values")]),t._v(" "),s("p",[t._v("When @ and @@ are prefixed in front of a name they represent, respectively, that name accessed in self and self.__class.")]),t._v(" "),s("p",[t._v("If they are used all by themselves, they are aliases for self and self.__class.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("assert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("assert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@@")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__class\n")])])]),s("YueDisplay",[s("pre",[t._v("assert @ == self\nassert @@ == self.__class\n")])]),t._v(" "),s("p",[t._v("For example, a quick way to create a new instance of the same class from an instance method using @@:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("some_instance_method "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@@")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v("some_instance_method = (...)=> @@ ...\n")])]),t._v(" "),s("h3",{attrs:{id:"class-expressions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#class-expressions"}},[t._v("#")]),t._v(" Class Expressions")]),t._v(" "),s("p",[t._v("The class syntax can also be used as an expression which can be assigned to a variable or explicitly returned.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Bucket")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("drops")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("add_drop")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@drops")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v("x = class Bucket\n  drops: 0\n  add_drop: => @drops += 1\n")])]),t._v(" "),s("h3",{attrs:{id:"anonymous-classes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#anonymous-classes"}},[t._v("#")]),t._v(" Anonymous classes")]),t._v(" "),s("p",[t._v("The name can be left out when declaring a class. The __name attribute will be nil, unless the class expression is in an assignment. The name on the left hand side of the assignment is used instead of nil.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BigBucket")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Bucket")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("add_drop")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@drops")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("assert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Bucket")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"BigBucket"')]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('BigBucket = class extends Bucket\n  add_drop: => @drops += 10\n\nassert Bucket.__name == "BigBucket"\n')])]),t._v(" "),s("p",[t._v("You can even leave off the body, meaning you can write a blank anonymous class like this:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v("x = class\n")])]),t._v(" "),s("h3",{attrs:{id:"class-mixing"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#class-mixing"}},[t._v("#")]),t._v(" Class Mixing")]),t._v(" "),s("p",[t._v("You can do mixing with keyword "),s("code",[t._v("using")]),t._v(" to copy functions from either a plain table or a predefined class object into your new class. When doing mixing with a plain table, you can override the class indexing function (metamethod "),s("code",[t._v("__index")]),t._v(") to your customized implementation. When doing mixing with an existing class object, the class object's metamethods won't be copied.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyIndex")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("__index")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("var")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("X")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyIndex")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v("\n\nx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("X")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("var\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Y")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("X")]),t._v("\n\ny "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Y")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\ny"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("func"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("assert")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__class"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__parent "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("X")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- X is not parent of Y")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v("MyIndex = __index: var: 1\n\nclass X using MyIndex\n  func: =>\n    print 123\n\nx = X!\nprint x.var\n\nclass Y using X\n\ny = Y!\ny\\func!\n\nassert y.__class.__parent ~= X -- X is not parent of Y\n")])]),t._v(" "),s("h2",{attrs:{id:"with-statement"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#with-statement"}},[t._v("#")]),t._v(" With Statement")]),t._v(" "),s("p",[t._v("A common pattern involving the creation of an object is calling a series of functions and setting a series of properties immediately after creating it.")]),t._v(" "),s("p",[t._v("This results in repeating the name of the object multiple times in code, adding unnecessary noise. A common solution to this is to pass a table in as an argument which contains a collection of keys and values to overwrite. The downside to this is that the constructor of this object must support this form.")]),t._v(" "),s("p",[t._v("The with block helps to alleviate this. Within a with block we can use a special statements that begin with either . or \\ which represent those operations applied to the object we are using with on.")]),t._v(" "),s("p",[t._v("For example, we work with a newly created object:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Oswald"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("add_relative my_dad\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("save"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name\n")])])]),s("YueDisplay",[s("pre",[t._v('with Person!\n  .name = "Oswald"\n  \\add_relative my_dad\n  \\save!\n  print .name\n')])]),t._v(" "),s("p",[t._v("The with statement can also be used as an expression which returns the value it has been giving access to.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("file "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("File")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"favorite_foods.txt"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("set_encoding "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"utf8"')]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('file = with File "favorite_foods.txt"\n  \\set_encoding "utf8"\n')])]),t._v(" "),s("p",[t._v("Or…")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("create_person "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  relatives"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("add_relative relative "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" relative "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("relatives\n\nme "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" create_person "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Leaf"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("dad"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mother"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sister"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('create_person = (name,  relatives)->\n  with Person!\n    .name = name\n    \\add_relative relative for relative in *relatives\n\nme = create_person "Leaf", {dad, mother, sister}\n')])]),t._v(" "),s("p",[t._v("In this usage, with can be seen as a special form of the K combinator.")]),t._v(" "),s("p",[t._v("The expression in the with statement can also be an assignment, if you want to give a name to the expression.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"original:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" str\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"upper:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("upper"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('with str = "Hello"\n  print "original:", str\n  print "upper:", \\upper!\n')])]),t._v(" "),s("h2",{attrs:{id:"do"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#do"}},[t._v("#")]),t._v(" Do")]),t._v(" "),s("p",[t._v("When used as a statement, do works just like it does in Lua.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n  var "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" var\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" var "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- nil here")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('do\n  var = "hello"\n  print var\nprint var -- nil here\n')])]),t._v(" "),s("p",[t._v("Yuescript’s "),s("strong",[t._v("do")]),t._v(" can also be used an expression . Allowing you to combine multiple lines into one. The result of the do expression is the last statement in its body.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("counter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n  i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("\n    i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    i\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" counter"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" counter"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v("counter = do\n  i = 0\n  ->\n    i += 1\n    i\n\nprint counter!\nprint counter!\n")])]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("tbl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("key")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"assigning key!"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1234")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('tbl = {\n  key: do\n    print "assigning key!"\n    1234\n}\n')])]),t._v(" "),s("h2",{attrs:{id:"function-stubs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#function-stubs"}},[t._v("#")]),t._v(" Function Stubs")]),t._v(" "),s("p",[t._v("It is common to pass a function from an object around as a value, for example, passing an instance method into a function as a callback. If the function expects the object it is operating on as the first argument then you must somehow bundle that object with the function so it can be called properly.")]),t._v(" "),s("p",[t._v("The function stub syntax is a shorthand for creating a new closure function that bundles both the object and function. This new function calls the wrapped function in the correct context of the object.")]),t._v(" "),s("p",[t._v("Its syntax is the same as calling an instance method with the \\ operator but with no argument list provided.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("my_object "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"the value:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@value")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nrun_callback "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("func"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"running callback..."')]),t._v("\n  func"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- this will not work:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- the function has to no reference to my_object")]),t._v("\nrun_callback my_object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("write\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- function stub syntax")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- lets us bundle the object into a new function")]),t._v("\nrun_callback my_object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("write\n")])])]),s("YueDisplay",[s("pre",[t._v('my_object = {\n  value: 1000\n  write: => print "the value:", @value\n}\n\nrun_callback = (func)->\n  print "running callback..."\n  func!\n\n-- this will not work:\n-- the function has to no reference to my_object\nrun_callback my_object.write\n\n-- function stub syntax\n-- lets us bundle the object into a new function\nrun_callback my_object\\write\n')])]),t._v(" "),s("h2",{attrs:{id:"the-using-clause-controlling-destructive-assignment"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#the-using-clause-controlling-destructive-assignment"}},[t._v("#")]),t._v(" The Using Clause; Controlling Destructive Assignment")]),t._v(" "),s("p",[t._v("While lexical scoping can be a great help in reducing the complexity of the code we write, things can get unwieldy as the code size increases. Consider the following snippet:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- many lines of code...")]),t._v("\n\nmy_func "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("\n  i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" i\n    i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\nmy_func"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- will print 0")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v("i = 100\n\n-- many lines of code...\n\nmy_func = ->\n  i = 10\n  while i > 0\n    print i\n    i -= 1\n\nmy_func!\n\nprint i -- will print 0\n")])]),t._v(" "),s("p",[t._v("In my_func, we've overwritten the value of i mistakenly. In this example it is quite obvious, but consider a large, or foreign code base where it isn’t clear what names have already been declared.")]),t._v(" "),s("p",[t._v("It would be helpful to say which variables from the enclosing scope we intend on change, in order to prevent us from changing others by accident.")]),t._v(" "),s("p",[t._v("The using keyword lets us do that. using nil makes sure that no closed variables are overwritten in assignment. The using clause is placed after the argument list in a function, or in place of it if there are no arguments.")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n\nmy_func "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("nil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("\n  i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- a new local variable is created here")]),t._v("\n\nmy_func"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- prints 100, i is unaffected")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v('i = 100\n\nmy_func = (using nil)->\n  i = "hello" -- a new local variable is created here\n\nmy_func!\nprint i -- prints 100, i is unaffected\n')])]),t._v(" "),s("p",[t._v("Multiple names can be separated by commas. Closure values can still be accessed, they just cant be modified:")]),t._v(" "),s("div",{staticClass:"language-moonscript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-moonscript"}},[s("code",[t._v("tmp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1213")]),t._v("\ni"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" k "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("\n\nmy_func "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("add "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" k"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("\n  tmp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tmp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" add "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- a new local tmp is created")]),t._v("\n  i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" tmp\n  k "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" tmp\n\nmy_func"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" k "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- these have been updated")]),t._v("\n")])])]),s("YueDisplay",[s("pre",[t._v("tmp = 1213\ni, k = 100, 50\n\nmy_func = (add using k, i)->\n  tmp = tmp + add -- a new local tmp is created\n  i += tmp\n  k += tmp\n\nmy_func(22)\nprint i, k -- these have been updated\n")])]),t._v(" "),s("h2",{attrs:{id:"licence-mit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#licence-mit"}},[t._v("#")]),t._v(" Licence: MIT")]),t._v(" "),s("p",[t._v("Copyright (c) 2022 Li Jin")]),t._v(" "),s("p",[t._v('Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the "Software"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:')]),t._v(" "),s("p",[t._v("The above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.")]),t._v(" "),s("p",[t._v('THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.')]),t._v(" "),s("CompilerModal")],1)}),[],!1,null,null,null);s.default=e.exports}}]);